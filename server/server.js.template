// Set node env for production with npm
// export NODE_ENV=production
// NODE_ENV=production node app.js
console.log(`NODE_ENV: ${process.env.NODE_ENV}`);
if (process.env.NODE_ENV !== 'production') {
  require('dotenv').config();
}

const logger = require('./logger');
const express = require('express');
const app = express();
const port = process.env.BACKEND_PORT || 5000;

app.get('/', (req, res) => {
  res.send('Hello World!');
});

app.get('/loggerOptions', (req, res) => {
  // Log messages at different log levels
  logger.log('error', 'This is an error message');
  logger.error('This is also an error message');
  logger.log('warn', 'This is a warning message');
  logger.log('info', 'This is an info message');
  logger.log('debug', 'This is a debug message');
  logger.log('fatal', 'This is a silly message');
  logger.trace('Tracing everything with highest logging level');
  logger.fatal('FATAL: ERROR');

  res.send('Loggin different options on server!');
});

app.get('/status', (request, response) => {
  const status = {
    Status: 'Running',
  };

  response.status(200).send(status);
});

app.post('/', function (req, res) {
  const payload = req.body;
  logger.trace({ payload: payload });

  res.status(200).send('Got a POST request').json(payload);
});

app.put('/user', function (req, res) {
  res.status(201).send('Got a PUT request at /user');
});

app.delete('/user', function (req, res) {
  res.status(202).send('Got a DELETE request at /user');
});

app.listen(port, () => {
  console.log(`Example app listening on port ${port}`);
});
